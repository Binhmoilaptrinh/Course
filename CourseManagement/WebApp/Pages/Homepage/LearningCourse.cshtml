@page
@model WebApp.Pages.Homepage.LearningCourseModel
@{
    Layout = "_LearningLayout";
}


<style>
    .comment-fix {
        position: sticky;
        bottom: 20px;
        right: 20px;
        z-index: 1;
        display: flex;
        justify-content: end;
    }

    .btn-comment {
        font-size: 1.6rem;
        font-weight: 600;
        background-color: #fff;
        padding: 8px 12px;
        border-radius: 999px;
        box-shadow: 0 0 10px #0003;
        cursor: pointer;
    }


    .comment-section {
        position: fixed;
        transform: translateX(0); /* Hiển thị sidebar */
        top: 0;
        right: 0;
        width: 50%;
        height: 100%; /* Chiều cao cố định */
        background-color: white;
        border-left: 1px solid #ddd;
        box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
        transform: translateX(100%);
        transition: transform 0.3s ease;
        display: flex;
        flex-direction: column;
        padding: 20px;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        overflow-y: auto; /* Kích hoạt thanh cuộn dọc khi nội dung vượt quá chiều cao */
    }


        .comment-section.show {
            transform: translateX(0);
            opacity: 1;
            visibility: visible;
        }

    .comment-toolbar {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        background-color: #f1f1f1;
    }

        .comment-toolbar button {
            background: none;
            border: none;
            margin-right: 10px;
            font-size: 1.2em;
            cursor: pointer;
        }

    .comment-input-box {
        width: 100%;
        margin-top: 10px;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 10px;
        font-size: 14px;
    }

    .comment-actions {
        display: flex;
        justify-content: flex-end;
        margin-top: 10px;
    }

        .comment-actions button {
            padding: 8px 16px;
            border-radius: 5px;
            border: none;
            font-weight: bold;
        }

    .btn-cancel {
        background-color: #f1f1f1;
        color: #6c757d;
    }

    .btn-submit {
        background-color: #007bff;
        color: white;
    }

    .comment {
        margin-top: 15px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .comment-author {
        font-weight: bold;
        color: #333;
    }

    .comment-time {
        font-size: 0.9em;
        color: #6c757d;
    }

    .comment-text {
        margin: 10px 0;
        color: #333;
    }

    .comment-actions a {
        font-size: 0.9em;
        margin-right: 15px;
        color: #007bff;
        cursor: pointer;
    }

        .comment-actions a:hover {
            text-decoration: underline;
        }

    .comment-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 10px;
    }

    .comment-body {
        display: flex;
    }

    .comment-content {
        flex: 1;
    }

    .reply-link {
        color: #007bff;
        font-size: 0.9em;
    }

    .comment-count {
        font-weight: bold;
        margin-top: 10px;
    }

    .comment-list {
        max-height: 700px; /* Chiều cao giới hạn cho phần bình luận */
        overflow-y: auto; /* Kích hoạt thanh cuộn cho phần bình luận */
    }

    .comment-section::-webkit-scrollbar {
        width: 8px; /* Chiều rộng của scrollbar */
    }

    .comment-section::-webkit-scrollbar-thumb {
        background-color: #007bff; /* Màu của thanh cuộn */
        border-radius: 10px; /* Bo góc cho thanh cuộn */
    }

    .comment-section::-webkit-scrollbar-track {
        background-color: #f1f1f1; /* Màu nền của thanh cuộn */
    }

    .comment-content img {
        max-width: 150px; /* Thay đổi kích thước tối đa cho hình ảnh */
        height: auto; /* Giữ tỉ lệ chiều cao tự động */
    }


    .comment {
        position: relative;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-bottom: 15px;
    }

    .menu-container {
        position: absolute;
        top: 10px; /* Căn chỉnh khoảng cách từ trên cùng */
        right: 10px; /* Căn chỉnh khoảng cách từ bên phải */
    }

    .menu-btn {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
    }

    .menu-options {
        position: absolute;
        top: 30px;
        right: 10px;
        background-color: #f9f9f9;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        z-index: 1;
        display: none;
    }

        .menu-options ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }

            .menu-options ul li {
                padding: 8px 16px;
                cursor: pointer;
            }

                .menu-options ul li:hover {
                    background-color: #ddd;
                }



    .quiz-section {
        margin-top: 20px;
        padding: 15px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .quiz-question {
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #ddd;
    }

        .quiz-question:last-child {
            border-bottom: none;
        }

        .quiz-question p {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .quiz-question ul {
            list-style-type: none;
            padding: 0;
        }

        .quiz-question li {
            margin-bottom: 8px;
        }

        .quiz-question input[type="radio"] {
            margin-right: 10px;
        }

    label {
        font-size: 16px;
        cursor: pointer;
    }
    /*
        button[type="submit"] {
            display: block;
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

            button[type="submit"]:hover {
                background-color: #0056b3;
            } */

    .score-display {
        font-size: 20px; /* Increase the font size */
        font-weight: bold; /* Make the score bold */
        color: #007bff; /* Primary color for score text */
        margin-top: 20px; /* Space above the score paragraph */
        margin-bottom: 20px; /* Space below the score paragraph */
        text-align: center; /* Center the text */
        padding: 10px; /* Padding around the score text */
        border: 2px solid #007bff; /* Border around the score */
        border-radius: 5px; /* Rounded corners for the border */
        background-color: #f1f8ff; /* Light background color for the score display */
    }
</style>


<body>
    @Html.AntiForgeryToken()
    @functions {
        public string FormatTime(double? totalSeconds)
        {
            int roundedSeconds = (int)Math.Round(totalSeconds ?? 0); // Làm tròn số giây

            int hours = roundedSeconds / 3600;
            int minutes = (roundedSeconds % 3600) / 60;
            int seconds = roundedSeconds % 60;

            string timeString = "";

            if (hours > 0)
            {
                timeString += $"{hours}h ";
            }

            if (minutes > 0 || hours > 0) // Hiển thị phút nếu có giờ hoặc phút khác 0
            {
                timeString += $"{minutes}m ";
            }

            timeString += $"{seconds}s"; // Luôn hiển thị giây

            return timeString.Trim(); // Loại bỏ khoảng trắng thừa ở cuối chuỗi
        }
    }
    @{
        double numLesson = 0;
        double numPass = 0;
    }
    @for (int i = 0; i < Model.Chapters.Count; i++)
    {
        @for (int j = 0; j < Model.Chapters[i].Lessons.Count; j++)
        {
            numLesson++;
            if (Model.Chapters[i].Lessons[j].IsPassed)
            {
                numPass++;
            }
        }
    }
    @{
        double progress = numPass / numLesson * 100;
        var deg = progress + "deg";
    }
    <div id="header" class="landingPage">
        <nav class="container">
            <a href="/Homepage/CourseDetail/@Model.CourseId"
               class="prev_page-btn">
                <i class="fa-solid fa-chevron-left"></i>
            </a>
            <div class="header__course-title">@*@Model.CurrentLesson.Name*@</div>
            <div class="header__learning-progress">
                <div class="header__learning-progress-percent">
                    <div class="circular-progress" style="background: conic-gradient(red 0deg, rgb(77, 79, 80) @deg);">
                        <span class="progress-value">@Math.Round(progress)</span>
                    </div>
                </div>
                <div class="header__learning-progress-lesson">@numPass/@numLesson bài học</div>
            </div>
        </nav>
    </div>
